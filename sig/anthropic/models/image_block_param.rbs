module Anthropic
  module Models
    type image_block_param =
      {
        source: Anthropic::Models::ImageBlockParam::source,
        type: :image,
        cache_control: Anthropic::Models::CacheControlEphemeral?
      }

    class ImageBlockParam < Anthropic::Internal::Type::BaseModel
      attr_accessor source: Anthropic::Models::ImageBlockParam::source

      attr_accessor type: :image

      attr_accessor cache_control: Anthropic::Models::CacheControlEphemeral?

      def initialize: (
        source: Anthropic::Models::ImageBlockParam::source,
        ?cache_control: Anthropic::Models::CacheControlEphemeral?,
        ?type: :image
      ) -> void

      def to_hash: -> Anthropic::Models::image_block_param

      type source =
        Anthropic::Models::Base64ImageSource | Anthropic::Models::URLImageSource

      module Source
        extend Anthropic::Internal::Type::Union

        def self?.variants: -> [Anthropic::Models::Base64ImageSource, Anthropic::Models::URLImageSource]
      end
    end
  end
end

module Anthropic
  module Models
    module Beta
      type message_create_params =
        {
          max_tokens: Integer,
          messages: ::Array[Anthropic::Models::Beta::BetaMessageParam],
          model: Anthropic::Models::model,
          metadata: Anthropic::Models::Beta::BetaMetadata,
          stop_sequences: ::Array[String],
          system_: Anthropic::Models::Beta::MessageCreateParams::system_,
          temperature: Float,
          thinking: Anthropic::Models::Beta::beta_thinking_config_param,
          tool_choice: Anthropic::Models::Beta::beta_tool_choice,
          tools: ::Array[Anthropic::Models::Beta::beta_tool_union],
          top_k: Integer,
          top_p: Float,
          betas: ::Array[Anthropic::Models::anthropic_beta]
        }
        & Anthropic::Internal::Type::request_parameters

      class MessageCreateParams < Anthropic::BaseModel
        extend Anthropic::Internal::Type::RequestParameters::Converter
        include Anthropic::Internal::Type::RequestParameters

        attr_accessor max_tokens: Integer

        attr_accessor messages: ::Array[Anthropic::Models::Beta::BetaMessageParam]

        attr_accessor model: Anthropic::Models::model

        attr_reader metadata: Anthropic::Models::Beta::BetaMetadata?

        def metadata=: (
          Anthropic::Models::Beta::BetaMetadata
        ) -> Anthropic::Models::Beta::BetaMetadata

        attr_reader stop_sequences: ::Array[String]?

        def stop_sequences=: (::Array[String]) -> ::Array[String]

        attr_reader system_: Anthropic::Models::Beta::MessageCreateParams::system_?

        def system_=: (
          Anthropic::Models::Beta::MessageCreateParams::system_
        ) -> Anthropic::Models::Beta::MessageCreateParams::system_

        attr_reader temperature: Float?

        def temperature=: (Float) -> Float

        attr_reader thinking: Anthropic::Models::Beta::beta_thinking_config_param?

        def thinking=: (
          Anthropic::Models::Beta::beta_thinking_config_param
        ) -> Anthropic::Models::Beta::beta_thinking_config_param

        attr_reader tool_choice: Anthropic::Models::Beta::beta_tool_choice?

        def tool_choice=: (
          Anthropic::Models::Beta::beta_tool_choice
        ) -> Anthropic::Models::Beta::beta_tool_choice

        attr_reader tools: ::Array[Anthropic::Models::Beta::beta_tool_union]?

        def tools=: (
          ::Array[Anthropic::Models::Beta::beta_tool_union]
        ) -> ::Array[Anthropic::Models::Beta::beta_tool_union]

        attr_reader top_k: Integer?

        def top_k=: (Integer) -> Integer

        attr_reader top_p: Float?

        def top_p=: (Float) -> Float

        attr_reader betas: ::Array[Anthropic::Models::anthropic_beta]?

        def betas=: (
          ::Array[Anthropic::Models::anthropic_beta]
        ) -> ::Array[Anthropic::Models::anthropic_beta]

        def initialize: (
          max_tokens: Integer,
          messages: ::Array[Anthropic::Models::Beta::BetaMessageParam],
          model: Anthropic::Models::model,
          ?metadata: Anthropic::Models::Beta::BetaMetadata,
          ?stop_sequences: ::Array[String],
          ?system_: Anthropic::Models::Beta::MessageCreateParams::system_,
          ?temperature: Float,
          ?thinking: Anthropic::Models::Beta::beta_thinking_config_param,
          ?tool_choice: Anthropic::Models::Beta::beta_tool_choice,
          ?tools: ::Array[Anthropic::Models::Beta::beta_tool_union],
          ?top_k: Integer,
          ?top_p: Float,
          ?betas: ::Array[Anthropic::Models::anthropic_beta],
          ?request_options: Anthropic::request_opts
        ) -> void

        def to_hash: -> Anthropic::Models::Beta::message_create_params

        type system_ =
          String | ::Array[Anthropic::Models::Beta::BetaTextBlockParam]

        module System
          extend Anthropic::Union

          def self?.variants: -> [String, ::Array[Anthropic::Models::Beta::BetaTextBlockParam]]

          type beta_text_block_param_array =
            ::Array[Anthropic::Models::Beta::BetaTextBlockParam]

          BetaTextBlockParamArray: beta_text_block_param_array
        end
      end
    end
  end
end

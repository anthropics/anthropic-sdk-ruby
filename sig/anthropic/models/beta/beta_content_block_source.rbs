module Anthropic
  module Models
    class BetaContentBlockSource = Beta::BetaContentBlockSource

    module Beta
      type beta_content_block_source =
        {
          content: Anthropic::Beta::BetaContentBlockSource::content,
          type: :content
        }

      class BetaContentBlockSource < Anthropic::Internal::Type::BaseModel
        attr_accessor content: Anthropic::Beta::BetaContentBlockSource::content

        attr_accessor type: :content

        def initialize: (
          content: Anthropic::Beta::BetaContentBlockSource::content,
          ?type: :content
        ) -> void

        type content =
          String
          | ::Array[Anthropic::Models::Beta::beta_content_block_source_content]

        module Content
          extend Anthropic::Internal::Type::Union

          def self?.variants: -> ::Array[Anthropic::Beta::BetaContentBlockSource::content]

          BetaContentBlockSourceContentArray: Anthropic::Internal::Type::Converter
        end
      end
    end
  end
end

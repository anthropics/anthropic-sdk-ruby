module Anthropic
  module Models
    class BetaMessage = Beta::BetaMessage

    module Beta
      type beta_message =
        {
          id: String,
          content: ::Array[Anthropic::Models::Beta::beta_content_block],
          model: Anthropic::Models::model,
          role: :assistant,
          stop_reason: Anthropic::Models::Beta::BetaMessage::stop_reason?,
          stop_sequence: String?,
          type: :message,
          usage: Anthropic::Models::Beta::BetaUsage
        }

      class BetaMessage < Anthropic::BaseModel
        attr_accessor id: String

        attr_accessor content: ::Array[Anthropic::Models::Beta::beta_content_block]

        attr_accessor model: Anthropic::Models::model

        attr_accessor role: :assistant

        attr_accessor stop_reason: Anthropic::Models::Beta::BetaMessage::stop_reason?

        attr_accessor stop_sequence: String?

        attr_accessor type: :message

        attr_accessor usage: Anthropic::Models::Beta::BetaUsage

        def initialize: (
          id: String,
          content: ::Array[Anthropic::Models::Beta::beta_content_block],
          model: Anthropic::Models::model,
          stop_reason: Anthropic::Models::Beta::BetaMessage::stop_reason?,
          stop_sequence: String?,
          usage: Anthropic::Models::Beta::BetaUsage,
          ?role: :assistant,
          ?type: :message
        ) -> void

        def to_hash: -> Anthropic::Models::Beta::beta_message

        type stop_reason = :end_turn | :max_tokens | :stop_sequence | :tool_use

        module StopReason
          extend Anthropic::Enum

          END_TURN: :end_turn
          MAX_TOKENS: :max_tokens
          STOP_SEQUENCE: :stop_sequence
          TOOL_USE: :tool_use

          def self.values: -> ::Array[Anthropic::Models::Beta::BetaMessage::stop_reason]
        end
      end
    end
  end
end

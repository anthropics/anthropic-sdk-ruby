module Anthropic
  module Models
    
    class BetaImageBlockParam = Beta::BetaImageBlockParam

    module Beta
      type beta_image_block_param =
        {
          source: Anthropic::Models::Beta::BetaImageBlockParam::source,
          type: :image,
          cache_control: Anthropic::Models::Beta::BetaCacheControlEphemeral?
        }

      class BetaImageBlockParam < Anthropic::BaseModel
        attr_accessor source: Anthropic::Models::Beta::BetaImageBlockParam::source

        attr_accessor type: :image

        attr_accessor cache_control: Anthropic::Models::Beta::BetaCacheControlEphemeral?

        def initialize: (
          source: Anthropic::Models::Beta::BetaImageBlockParam::source,
          ?cache_control: Anthropic::Models::Beta::BetaCacheControlEphemeral?,
          ?type: :image
        ) -> void

        def to_hash: -> Anthropic::Models::Beta::beta_image_block_param

        type source =
          Anthropic::Models::Beta::BetaBase64ImageSource
          | Anthropic::Models::Beta::BetaURLImageSource

        class Source < Anthropic::Union
          def self.variants: -> [Anthropic::Models::Beta::BetaBase64ImageSource, Anthropic::Models::Beta::BetaURLImageSource]
        end
      end
    end
  end
end

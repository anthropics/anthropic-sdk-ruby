module Anthropic
  module Models
    type content_block_source =
      {
        content: Anthropic::Models::ContentBlockSource::content,
        type: :content
      }

    class ContentBlockSource < Anthropic::BaseModel
      attr_accessor content: Anthropic::Models::ContentBlockSource::content

      attr_accessor type: :content

      def initialize: (
        content: Anthropic::Models::ContentBlockSource::content,
        ?type: :content
      ) -> void

      def to_hash: -> Anthropic::Models::content_block_source

      type content =
        String | ::Array[Anthropic::Models::content_block_source_content]

      module Content
        extend Anthropic::Union

        type content_block_source_content_array =
          ::Array[Anthropic::Models::content_block_source_content]

        ContentBlockSourceContentArray: content_block_source_content_array

        def self?.variants: -> [String, ::Array[Anthropic::Models::content_block_source_content]]
      end
    end
  end
end
